{"ast":null,"code":"var _jsxFileName = \"/Users/mattermost/Documents/paystub/paystub-web/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved theme preference or use system preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark') {\n      setDarkMode(true);\n      document.documentElement.classList.add('dark');\n    } else if (savedTheme === 'light') {\n      setDarkMode(false);\n      document.documentElement.classList.remove('dark');\n    } else {\n      // Use system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setDarkMode(prefersDark);\n      if (prefersDark) {\n        document.documentElement.classList.add('dark');\n      }\n    }\n  }, []);\n  const toggleTheme = () => {\n    setDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      if (newMode) {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n      return newMode;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","darkMode","setDarkMode","savedTheme","localStorage","getItem","document","documentElement","classList","add","remove","prefersDark","window","matchMedia","matches","toggleTheme","prevMode","newMode","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattermost/Documents/paystub/paystub-web/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for saved theme preference or use system preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark') {\n      setDarkMode(true);\n      document.documentElement.classList.add('dark');\n    } else if (savedTheme === 'light') {\n      setDarkMode(false);\n      document.documentElement.classList.remove('dark');\n    } else {\n      // Use system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setDarkMode(prefersDark);\n      if (prefersDark) {\n        document.documentElement.classList.add('dark');\n      }\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    setDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem('theme', newMode ? 'dark' : 'light');\n      \n      if (newMode) {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n      \n      return newMode;\n    });\n  };\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,KAAK,MAAM,EAAE;MACzBD,WAAW,CAAC,IAAI,CAAC;MACjBI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM,IAAIN,UAAU,KAAK,OAAO,EAAE;MACjCD,WAAW,CAAC,KAAK,CAAC;MAClBI,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD,CAAC,MAAM;MACL;MACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;MAC7EZ,WAAW,CAACS,WAAW,CAAC;MACxB,IAAIA,WAAW,EAAE;QACfL,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAChD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxBb,WAAW,CAACc,QAAQ,IAAI;MACtB,MAAMC,OAAO,GAAG,CAACD,QAAQ;MACzBZ,YAAY,CAACc,OAAO,CAAC,OAAO,EAAED,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;MAEzD,IAAIA,OAAO,EAAE;QACXX,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAChD,CAAC,MAAM;QACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACnD;MAEA,OAAOO,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,QAAQ;MAAEc;IAAY,CAAE;IAAAhB,QAAA,EACrDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACxB,GAAA,CA1CWF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}